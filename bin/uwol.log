main: Initializing Engine...
Parsing parameters...
Initializing MusicManager...Ok
Game: Initializing...
Game: Initializing screen (640 x 480)...
OpenGL: 4.3.0 - Build 10.18.15.4281
GLSL: 430
Creating framebuffer
Framebuffer #1
Framebuffer bound!
Texture created
Texture #1 attached to framebuffer!
Framebuffer initialized Ok! 1
ShaderMgr: Loading shader 'data/shaders/Default.150.vertex'...
#version 430

#if __VERSION__ >= 140
// Input vertex data, different for all executions of this shader.
in vec3 vertexPosition;
in vec2 vertexUV;
in vec4 vertexColor;
// Output data ; will be interpolated for each fragment.
out vec2 UV;
out vec4 vertColor;
#else
// Input vertex data, different for all executions of this shader.
attribute vec3 vertexPosition;
attribute vec2 vertexUV;
attribute vec4 vertexColor;
// Output data ; will be interpolated for each fragment.
varying vec2 UV;
varying vec4 vertColor;
#endif

uniform mat4 MVP;

void main(){	
	// Output position of the vertex, in clip space : MVP * position
	gl_Position = MVP * vec4(vertexPosition, 1);

	// UV of the vertex.
	UV = vec2(vertexUV);
	
	// Vertex color.
	vertColor = vec4(vertexColor);
}

Shader compile log:
1
ShaderMgr: Loading shader 'data/shaders/TexturedColored.150.fragment'...
#version 430
#if __VERSION__ >= 140
// Interpolated values from the vertex shaders
in vec2 UV;
in vec4 vertColor;
// Ouput data
out vec4 fragColor;
#else
varying vec2 UV;
varying vec4 vertColor;
#endif

// Values that stay constant for the whole mesh.
uniform sampler2D iChannel0;

void main(){
	// Output color = color of the texture at the specified UV
#if __VERSION__ >= 140
	fragColor = texture( iChannel0, mod(UV, vec2(1.0,1.0)) ) * vertColor;
#else
	gl_FragColor = texture2D( iChannel0, mod(UV, vec2(1.0,1.0)) ) * vertColor;
#endif
}

Shader compile log:
2
ShaderMgr: Loading shader 'data/shaders/Line.150.vertex'...
#version 430
#if __VERSION__ >= 140
in vec2 vertexPosition;
#else
attribute vec2 vertexPosition;
#endif

// Output data ; will be interpolated for each fragment.
#if __VERSION__ >= 140
out vec4 vertColor;
#else
varying vec4 vertColor;
#endif

uniform mat4 MVP;
uniform vec4 vertexColor;

void main(){
	// Output position of the vertex, in clip space : MVP * position
	gl_Position = MVP * vec4(vertexPosition.x, vertexPosition.y, 0.0, 1.0);

	// Vertex color.
	vertColor = vertexColor;
}

Shader compile log:
4
ShaderMgr: Loading shader 'data/shaders/Color.150.fragment'...
#version 430
#if __VERSION__ >= 140
// Interpolated values from the vertex shaders
in vec4 vertColor;
// Ouput data
out vec4 fragColor;
#else
varying vec4 vertColor;
#endif

void main()
{
#if __VERSION__ >= 140
  fragColor = vertColor;
#else
  gl_FragColor = vertColor;
#endif
}

Shader compile log:
5
Game: Initialization OK.
Game: Loading resources...
Game: Initializing Scanlines...
Loading vertex shader: data/shaders/Default.150.vertex
Texture: 'data/font.png'
Texture info:
-------------
Size: (128, 128) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
ShaderMgr: Loading shader 'data/shaders/Default.150.vertex'...
IN CACHE!
ShaderMgr: Loading shader 'data/shaders/TexturedColored.150.fragment'...
IN CACHE!
ShaderMgr: Loading shader 'data/shaders/Default.150.vertex'...
IN CACHE!
Loading fragment shader: data/shaders/TexturedColored.150.fragment
ShaderMgr: Loading shader 'data/shaders/TexturedColored.150.fragment'...
IN CACHE!
Loading vertex shader: data/shaders/Default.150.vertex
ShaderMgr: Loading shader 'data/shaders/Default.150.vertex'...
IN CACHE!
Loading fragment shader: data/shaders/CRT.150.fragment
ShaderMgr: Loading shader 'data/shaders/CRT.150.fragment'...
#version 430
//
// PUBLIC DOMAIN CRT STYLED SCAN-LINE SHADER
//
//   by Timothy Lottes
//
// This is more along the style of a really good CGA arcade monitor.
// With RGB inputs instead of NTSC.
// The shadow mask example has the mask rotated 90 degrees for less chromatic aberration.
//
// Left it unoptimized to show the theory behind the algorithm.
//
// It is an example what I personally would want as a display option for pixel art games.
// Please take and use, change, or whatever.
//

#if __VERSION__ >= 140
// Interpolated values from the vertex shaders
in vec2 UV;
in vec4 vertColor;
// Ouput data
out vec4 fragColor;
#else
varying vec2 UV;
varying vec4 vertColor;
#endif

// Values that stay constant for the whole mesh.
uniform sampler2D iChannel0;
uniform vec2 iResolution;

// Hardness of scanline.
//  -8.0 = soft
// -16.0 = medium
float hardScan=-8.0;

// Hardness of pixels in scanline.
// -2.0 = soft
// -4.0 = hard
float hardPix=-3.0;

// Display warp.
// 0.0 = none
// 1.0/8.0 = extreme
vec2 warp = vec2(1.0/32.0, 1.0/24.0); 

// Amount of shadow mask.
float maskDark=0.5;
float maskLight=1.5;

//------------------------------------------------------------------------
// sRGB to Linear.
// Assuing using sRGB typed textures this should not be needed.
float ToLinear1(float c){return(c<=0.04045)?c/12.92:pow((c+0.055)/1.055,2.4);}
vec3 ToLinear(vec3 c){return vec3(ToLinear1(c.r),ToLinear1(c.g),ToLinear1(c.b));}

// Linear to sRGB.
// Assuing using sRGB typed textures this should not be needed.
float ToSrgb1(float c){return(c<0.0031308?c*12.92:1.055*pow(c,0.41666)-0.055);}
vec3 ToSrgb(vec3 c){return vec3(ToSrgb1(c.r),ToSrgb1(c.g),ToSrgb1(c.b));}

// Nearest emulated sample given floating point position and texel offset.
// Also zero's off screen.
vec3 Fetch(vec2 pos,vec2 off){
  vec3 result;
  pos = (floor( pos*iResolution + off) + vec2(0.5,0.5))/iResolution;
#if __VERSION__ >= 140
  result = ToLinear(1.2 * texture(iChannel0 , pos.xy, -16.0).rgb);
#else
  result = ToLinear(1.2 * texture2D(iChannel0 , pos.xy, -16.0).rgb);
#endif
  return result;
}

// Distance in emulated pixels to nearest texel.
vec2 Dist(vec2 pos){pos=pos*iResolution;return -((pos-floor(pos))-vec2(0.5));}
    
// 1D Gaussian.
float Gaus(float pos,float scale){return exp2(scale*pos*pos);}

// 3-tap Gaussian filter along horz line.
vec3 Horz3(vec2 pos,float off){
  vec3 b=Fetch(pos,vec2(-1.0,off));
  vec3 c=Fetch(pos,vec2( 0.0,off));
  vec3 d=Fetch(pos,vec2( 1.0,off));
  float dst=Dist(pos).x;
  // Convert distance to weight.
  float scale=hardPix;
  float wb=Gaus(dst-1.0,scale);
  float wc=Gaus(dst+0.0,scale);
  float wd=Gaus(dst+1.0,scale);
  // Return filtered sample.
  return (b*wb+c*wc+d*wd)/(wb+wc+wd);
}

// 5-tap Gaussian filter along horz line.
vec3 Horz5(vec2 pos,float off){
  vec3 a=Fetch(pos,vec2(-2.0,off));
  vec3 b=Fetch(pos,vec2(-1.0,off));
  vec3 c=Fetch(pos,vec2( 0.0,off));
  vec3 d=Fetch(pos,vec2( 1.0,off));
  vec3 e=Fetch(pos,vec2( 2.0,off));
  float dst=Dist(pos).x;
  // Convert distance to weight.
  float scale=hardPix;
  float wa=Gaus(dst-2.0,scale);
  float wb=Gaus(dst-1.0,scale);
  float wc=Gaus(dst+0.0,scale);
  float wd=Gaus(dst+1.0,scale);
  float we=Gaus(dst+2.0,scale);
  // Return filtered sample.
  return (a*wa+b*wb+c*wc+d*wd+e*we)/(wa+wb+wc+wd+we);
}

// Return scanline weight.
float Scan(vec2 pos,float off){
  float dst=Dist(pos).y;
  return Gaus(dst+off,hardScan);
}

// Allow nearest three lines to effect pixel.
vec3 Tri(vec2 pos){
  vec3 a=Horz3(pos,-1.0);
  vec3 b=Horz5(pos, 0.0);
  vec3 c=Horz3(pos, 1.0);
  float wa=Scan(pos,-1.0);
  float wb=Scan(pos, 0.0);
  float wc=Scan(pos, 1.0);
  return a*wa + b*wb + c*wc;
}

// Distortion of scanlines, and end of screen alpha.
vec2 Warp(vec2 pos){
  pos = pos*2.0-1.0;    
  pos *= vec2(1.0+(pos.y*pos.y)*warp.x,1.0+(pos.x*pos.x)*warp.y);
  return pos*0.5+0.5;
}

// Shadow mask.
vec3 Mask(vec2 pos) {
  pos.x+=pos.y*3.0;
  vec3 mask=vec3(maskDark,maskDark,maskDark);
  pos.x=fract(pos.x/6.0);
  if(pos.x<0.333)mask.r=maskLight;
  else if(pos.x<0.666)mask.g=maskLight;
  else mask.b=maskLight;
  return mask;
}

void main() {
    vec2 pos = gl_FragCoord.xy/iResolution;
    pos = Warp(gl_FragCoord.xy/iResolution);
    vec4 result;
    result.rgb = Tri(pos) * Mask(gl_FragCoord.xy);
    result.a = 1.0;
    result = vertColor * vec4(ToSrgb(result.rgb), result.a);
#if __VERSION__ >= 140
    fragColor = result;
#else
    gl_FragColor = result;
#endif
}

Shader compile log:
9
Loading vertex shader: data/shaders/Default.150.vertex
ShaderMgr: Loading shader 'data/shaders/Default.150.vertex'...
IN CACHE!
Loading fragment shader: data/shaders/CRT-VideoDistort.fragment
ShaderMgr: Loading shader 'data/shaders/CRT-VideoDistort.fragment'...
#version 430
//
// PUBLIC DOMAIN CRT STYLED SCAN-LINE SHADER
//
//   by Timothy Lottes
//
// This is more along the style of a really good CGA arcade monitor.
// With RGB inputs instead of NTSC.
// The shadow mask example has the mask rotated 90 degrees for less chromatic aberration.
//
// Left it unoptimized to show the theory behind the algorithm.
//
// It is an example what I personally would want as a display option for pixel art games.
// Please take and use, change, or whatever.
//

#if __VERSION__ >= 140
// Interpolated values from the vertex shaders
in vec2 UV;
in vec4 vertColor;
// Ouput data
out vec4 fragColor;
#else
varying vec2 UV;
varying vec4 vertColor;
#endif

// Values that stay constant for the whole mesh.
uniform sampler2D iChannel0;
uniform sampler2D iChannel1;

uniform vec2 iResolution;
uniform float iGlobalTime;

// Hardness of scanline.
//  -8.0 = soft
// -16.0 = medium
float hardScan=-8.0;

// Hardness of pixels in scanline.
// -2.0 = soft
// -4.0 = hard
float hardPix=-3.0;

// Display warp.
// 0.0 = none
// 1.0/8.0 = extreme
vec2 warp = vec2(1.0/32.0, 1.0/24.0); 

// Amount of shadow mask.
float maskDark=0.5;
float maskLight=1.5;

//------------------------------------------------------------------------
// sRGB to Linear.
// Assuing using sRGB typed textures this should not be needed.
float ToLinear1(float c){return(c<=0.04045)?c/12.92:pow((c+0.055)/1.055,2.4);}
vec3 ToLinear(vec3 c){return vec3(ToLinear1(c.r),ToLinear1(c.g),ToLinear1(c.b));}

// Linear to sRGB.
// Assuing using sRGB typed textures this should not be needed.
float ToSrgb1(float c){return(c<0.0031308?c*12.92:1.055*pow(c,0.41666)-0.055);}
vec3 ToSrgb(vec3 c){return vec3(ToSrgb1(c.r),ToSrgb1(c.g),ToSrgb1(c.b));}

// Nearest emulated sample given floating point position and texel offset.
// Also zero's off screen.
vec3 Fetch(vec2 pos,vec2 off){
  vec3 result;
  pos = (floor( pos*iResolution + off) + vec2(0.5,0.5))/iResolution;
#if __VERSION__ >= 140
  result = ToLinear(1.2 * texture(iChannel0 , pos.xy, -16.0).rgb);
#else
  result = ToLinear(1.2 * texture2D(iChannel0 , pos.xy, -16.0).rgb);
#endif
  return result;
}

// Distance in emulated pixels to nearest texel.
vec2 Dist(vec2 pos){pos=pos*iResolution;return -((pos-floor(pos))-vec2(0.5));}
    
// 1D Gaussian.
float Gaus(float pos,float scale){return exp2(scale*pos*pos);}

// 3-tap Gaussian filter along horz line.
vec3 Horz3(vec2 pos,float off){
  vec3 b=Fetch(pos,vec2(-1.0,off));
  vec3 c=Fetch(pos,vec2( 0.0,off));
  vec3 d=Fetch(pos,vec2( 1.0,off));
  float dst=Dist(pos).x;
  // Convert distance to weight.
  float scale=hardPix;
  float wb=Gaus(dst-1.0,scale);
  float wc=Gaus(dst+0.0,scale);
  float wd=Gaus(dst+1.0,scale);
  // Return filtered sample.
  return (b*wb+c*wc+d*wd)/(wb+wc+wd);
}

// 5-tap Gaussian filter along horz line.
vec3 Horz5(vec2 pos,float off){
  vec3 a=Fetch(pos,vec2(-2.0,off));
  vec3 b=Fetch(pos,vec2(-1.0,off));
  vec3 c=Fetch(pos,vec2( 0.0,off));
  vec3 d=Fetch(pos,vec2( 1.0,off));
  vec3 e=Fetch(pos,vec2( 2.0,off));
  float dst=Dist(pos).x;
  // Convert distance to weight.
  float scale=hardPix;
  float wa=Gaus(dst-2.0,scale);
  float wb=Gaus(dst-1.0,scale);
  float wc=Gaus(dst+0.0,scale);
  float wd=Gaus(dst+1.0,scale);
  float we=Gaus(dst+2.0,scale);
  // Return filtered sample.
  return (a*wa+b*wb+c*wc+d*wd+e*we)/(wa+wb+wc+wd+we);
}

// Return scanline weight.
float Scan(vec2 pos,float off){
  float dst=Dist(pos).y;
  return Gaus(dst+off,hardScan);
}

// Allow nearest three lines to effect pixel.
vec3 Tri(vec2 pos){
  vec3 a=Horz3(pos,-1.0);
  vec3 b=Horz5(pos, 0.0);
  vec3 c=Horz3(pos, 1.0);
  float wa=Scan(pos,-1.0);
  float wb=Scan(pos, 0.0);
  float wc=Scan(pos, 1.0);
  return a*wa + b*wb + c*wc;
}

// Distortion of scanlines, and end of screen alpha.
vec2 Warp(vec2 pos){
  pos = pos*2.0-1.0;    
  pos *= vec2(1.0+(pos.y*pos.y)*warp.x,1.0+(pos.x*pos.x)*warp.y);
  return pos*0.5+0.5;
}

// Shadow mask.
vec3 Mask(vec2 pos) {
  pos.x+=pos.y*3.0;
  vec3 mask=vec3(maskDark,maskDark,maskDark);
  pos.x=fract(pos.x/6.0);
  if(pos.x<0.333)mask.r=maskLight;
  else if(pos.x<0.666)mask.g=maskLight;
  else mask.b=maskLight;
  return mask;
}

float noise(vec2 p)
{
	float smp;
	smp = texture2D(iChannel1,vec2(1.,2.*cos(iGlobalTime))*mod(iGlobalTime/1000.0,1.0)*8. + p*1.).x;
	smp *= smp;
	return smp;
}

float onOff(float a, float b, float c) {
	return step(c, sin(iGlobalTime + a*cos(iGlobalTime*b)));
}

float ramp(float y, float start, float end) {
	float inside = step(start,y) - step(end,y);
	float fact = (y-start)/(end-start)*inside;
	return (1.-fact) * inside;
	
}

float stripes(vec2 uv) {	
	float noi = noise(uv*vec2(0.5,1.) + vec2(1.,3.));
	return ramp(mod(uv.y*4. + iGlobalTime/2.+sin(iGlobalTime + sin(iGlobalTime*0.63)),1.),0.5,0.6)*noi;
}

vec4 getVideo(vec2 uv) {
	vec2 look = uv;
    look = Warp(look);
    vec3 video = Tri(look) * Mask(gl_FragCoord.xy);
	vec4 result = vec4(video, 1.0);
    result = vertColor * vec4(ToSrgb(result.rgb), result.a);
	return result;
}

vec2 screenDistort(vec2 uv)
{
	uv -= vec2(.5,.5);
	uv = uv*1.2*(1./1.2+2.*uv.x*uv.x*uv.y*uv.y);
	uv += vec2(.5,.5);
	return uv;
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
	vec2 uv = fragCoord.xy;
	uv = screenDistort(uv);
	vec3 video = getVideo(uv).rgb;
	
	float vigAmt = 4.+.3*sin(iGlobalTime + 5.*cos(iGlobalTime*5.));
	float vignette = (1.-vigAmt*(uv.y-.5)*(uv.y-.5))*(1.-vigAmt*(uv.x-.5)*(uv.x-.5));
	
	video += 0.2 * stripes(uv);
	video += 0.2 * noise(2.0 * uv);
	video *= vignette;
	video *= (12.+mod(uv.y*30.+iGlobalTime,1.))/13.;
	
	fragColor = vec4(video,1.0);
}

void main() {
	vec4 result;
	mainImage(result, UV);
#if __VERSION__ >= 140
    fragColor = result;
#else
    gl_FragColor = result;
#endif
}

Shader compile log:
11
Texture: 'data/noise.png'
Texture info:
-------------
Size: (256, 256) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading vertex shader: data/shaders/Default.150.vertex
ShaderMgr: Loading shader 'data/shaders/Default.150.vertex'...
IN CACHE!
Loading fragment shader: data/shaders/CRT-Jasper.fragment
ShaderMgr: Loading shader 'data/shaders/CRT-Jasper.fragment'...
#version 430
#if __VERSION__ >= 140
// Interpolated values from the vertex shaders
in vec2 UV;
in vec4 vertColor;
// Ouput data
out vec4 fragColor;
#else
varying vec2 UV;
varying vec4 vertColor;
#endif

// Values that stay constant for the whole mesh.
uniform sampler2D iChannel0;
uniform sampler2D iChannel1;

uniform vec2 iResolution;
uniform float iGlobalTime;

// Hardness of scanline.
//  -8.0 = soft
// -16.0 = medium
float hardScan=-6.0;

// Hardness of pixels in scanline.
// -2.0 = soft
// -4.0 = hard
float hardPix=-2.0;

// Display warp.
// 0.0 = none
// 1.0/8.0 = extreme
vec2 warp = vec2(1.0/32.0, 1.0/24.0); 

// Amount of shadow mask.
float maskDark=0.5;
float maskLight=1.5;

//------------------------------------------------------------------------
// sRGB to Linear.
// Assuing using sRGB typed textures this should not be needed.
float ToLinear1(float c){return(c<=0.04045)?c/12.92:pow((c+0.055)/1.055,2.4);}
vec3 ToLinear(vec3 c){return vec3(ToLinear1(c.r),ToLinear1(c.g),ToLinear1(c.b));}

// Linear to sRGB.
// Assuing using sRGB typed textures this should not be needed.
float ToSrgb1(float c){return(c<0.0031308?c*12.92:1.055*pow(c,0.41666)-0.055);}
vec3 ToSrgb(vec3 c){return vec3(ToSrgb1(c.r),ToSrgb1(c.g),ToSrgb1(c.b));}

// Nearest emulated sample given floating point position and texel offset.
// Also zero's off screen.
vec3 Fetch(vec2 pos,vec2 off){
  vec3 result;
  pos = (floor( pos*iResolution + off) + vec2(0.5,0.5))/iResolution;
#if __VERSION__ >= 140
  //result = ToLinear(1.2 * texture(iChannel0 , pos.xy, -16.0).rgb);
  result.r = texture(iChannel0, vec2(pos.x - 0.004 * sin(iGlobalTime), pos.y)).r;
  result.g = texture(iChannel0, vec2(pos.x                           , pos.y)).g;
  result.b = texture(iChannel0, vec2(pos.x + 0.004 * cos(iGlobalTime), pos.y)).b;
#else
  //result = ToLinear(1.2 * texture2D(iChannel0 , pos.xy, -16.0).rgb);
  result.r = texture2D(tex, vec2(pos.x - 0.004 * sin(iGlobalTime), pos.y)).r;
  result.g = texture2D(tex, vec2(pos.x                           , pos.y)).g;
  result.b = texture2D(tex, vec2(pos.x + 0.004 * cos(iGlobalTime), pos.y)).b;
#endif
  //result = ToLinear(1.2 * result);
  return result;
}

// Distance in emulated pixels to nearest texel.
vec2 Dist(vec2 pos){pos=pos*iResolution;return -((pos-floor(pos))-vec2(0.5));}
    
// 1D Gaussian.
float Gaus(float pos,float scale){return exp2(scale*pos*pos);}

// 3-tap Gaussian filter along horz line.
vec3 Horz3(vec2 pos,float off){
  vec3 b=Fetch(pos,vec2(-1.0,off));
  vec3 c=Fetch(pos,vec2( 0.0,off));
  vec3 d=Fetch(pos,vec2( 1.0,off));
  float dst=Dist(pos).x;
  // Convert distance to weight.
  float scale=hardPix;
  float wb=Gaus(dst-1.0,scale);
  float wc=Gaus(dst+0.0,scale);
  float wd=Gaus(dst+1.0,scale);
  // Return filtered sample.
  return (b*wb+c*wc+d*wd)/(wb+wc+wd);
}

// 5-tap Gaussian filter along horz line.
vec3 Horz5(vec2 pos,float off){
  vec3 a=Fetch(pos,vec2(-2.0,off));
  vec3 b=Fetch(pos,vec2(-1.0,off));
  vec3 c=Fetch(pos,vec2( 0.0,off));
  vec3 d=Fetch(pos,vec2( 1.0,off));
  vec3 e=Fetch(pos,vec2( 2.0,off));
  float dst=Dist(pos).x;
  // Convert distance to weight.
  float scale=hardPix;
  float wa=Gaus(dst-2.0,scale);
  float wb=Gaus(dst-1.0,scale);
  float wc=Gaus(dst+0.0,scale);
  float wd=Gaus(dst+1.0,scale);
  float we=Gaus(dst+2.0,scale);
  // Return filtered sample.
  return (a*wa+b*wb+c*wc+d*wd+e*we)/(wa+wb+wc+wd+we);
}

// Return scanline weight.
float Scan(vec2 pos,float off){
  float dst=Dist(pos).y;
  return Gaus(dst+off,hardScan);
}

// Allow nearest three lines to effect pixel.
vec3 Tri(vec2 pos){
  vec3 a=Horz3(pos,-1.0);
  vec3 b=Horz5(pos, 0.0);
  vec3 c=Horz3(pos, 1.0);
  float wa=Scan(pos,-1.0);
  float wb=Scan(pos, 0.0);
  float wc=Scan(pos, 1.0);
  return a*wa + b*wb + c*wc;
}

// Distortion of scanlines, and end of screen alpha.
vec2 Warp(vec2 pos){
  pos = pos*2.0-1.0;    
  pos *= vec2(1.0+(pos.y*pos.y)*warp.x,1.0+(pos.x*pos.x)*warp.y);
  return pos*0.5+0.5;
}

// Shadow mask.
vec3 Mask(vec2 pos) {
  pos.x+=pos.y*3.0;
  vec3 mask=vec3(maskDark,maskDark,maskDark);
  pos.x=fract(pos.x/6.0);
  if(pos.x<0.333)mask.r=maskLight;
  else if(pos.x<0.666)mask.g=maskLight;
  else mask.b=maskLight;
  return mask;
}

vec3 scanline(vec2 coord, vec3 screen) {
	screen.rgb -= sin((coord.y + (iGlobalTime * 29.0))) * 0.02;
	return screen;
}

float noise(vec2 p) {
	float smp;
	smp = texture2D(iChannel1,vec2(p.x,2.*cos(iGlobalTime))*mod(iGlobalTime/1000.0,1.0)*8. + p*1.).x;
	smp *= smp;
	return smp;
}

float onOff(float a, float b, float c) {
	return step(c, sin(iGlobalTime + a*cos(iGlobalTime*b)));
}

float ramp(float y, float start, float end) {
	float inside = step(start,y) - step(end,y);
	float fact = (y-start)/(end-start)*inside;
	return (1.-fact) * inside;	
}

float stripes(vec2 uv) {	
	float noi = noise(uv*vec2(0.5,1.) + vec2(1.,3.));
	return ramp(mod(uv.y*4. + iGlobalTime/2.+sin(iGlobalTime + sin(iGlobalTime*0.63)),1.),0.5,0.6)*noi;
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
	vec2 crtCoords = Warp(fragCoord);

	// shadertoy has tiling textures. wouldn't be needed
	// if you set up your tex params properly
	if (crtCoords.x < 0.0 || crtCoords.x > 1.0 || crtCoords.y < 0.0 || crtCoords.y > 1.0) {
		fragColor.rgb = vec3(0.0,0.0,0.0);
	}
	else {
		// Split the color channels
		fragColor.rgb = Tri(crtCoords); // * Mask(gl_FragCoord.xy); // sampleSplit(iChannel0, crtCoords); 
		
		float vigAmt = 4.+.3*sin(iGlobalTime + 5.*cos(iGlobalTime*5.));
		float vignette = (1.-vigAmt*(fragCoord.y-.5)*(fragCoord.y-.5))*(1.-vigAmt*(fragCoord.x-.5)*(fragCoord.x-.5));

		fragColor += 0.2 * stripes(fragCoord);
		fragColor += 0.2 * noise(2.0 * fragCoord);
		fragColor *= vignette;
		fragColor *= (12. + mod(fragCoord.y*30. + iGlobalTime, 1.))/13.;
	}
	fragColor = vec4(fragColor.rgb,1.0);

}

void main() {
	vec4 result;
	mainImage(result, UV);
#if __VERSION__ >= 140
    fragColor = result;
#else
    gl_FragColor = result;
#endif
}

Shader compile log:
13
Loading vertex shader: data/shaders/Default.150.vertex
ShaderMgr: Loading shader 'data/shaders/Default.150.vertex'...
IN CACHE!
Loading fragment shader: data/shaders/TexturedSepia.150.fragment
ShaderMgr: Loading shader 'data/shaders/TexturedSepia.150.fragment'...
#version 430
//
// PUBLIC DOMAIN CRT STYLED SCAN-LINE SHADER
//
//   by Timothy Lottes
//
// This is more along the style of a really good CGA arcade monitor.
// With RGB inputs instead of NTSC.
// The shadow mask example has the mask rotated 90 degrees for less chromatic aberration.
//
// Left it unoptimized to show the theory behind the algorithm.
//
// It is an example what I personally would want as a display option for pixel art games.
// Please take and use, change, or whatever.
//

#if __VERSION__ >= 140
// Interpolated values from the vertex shaders
in vec2 UV;
in vec4 vertColor;
// Ouput data
out vec4 fragColor;
#else
varying vec2 UV;
varying vec4 vertColor;
#endif

// Values that stay constant for the whole mesh.
uniform sampler2D iChannel0;
uniform vec2 iResolution;
uniform vec3 sepiaRgb;

// Hardness of scanline.
//  -8.0 = soft
// -16.0 = medium
float hardScan=-8.0;

// Hardness of pixels in scanline.
// -2.0 = soft
// -4.0 = hard
float hardPix=-3.0;

// Display warp.
// 0.0 = none
// 1.0/8.0 = extreme
vec2 warp = vec2(1.0/32.0, 1.0/24.0); 

// Amount of shadow mask.
float maskDark=0.5;
float maskLight=1.5;

//------------------------------------------------------------------------
// sRGB to Linear.
// Assuing using sRGB typed textures this should not be needed.
float ToLinear1(float c){return(c<=0.04045)?c/12.92:pow((c+0.055)/1.055,2.4);}
vec3 ToLinear(vec3 c){return vec3(ToLinear1(c.r),ToLinear1(c.g),ToLinear1(c.b));}

// Linear to sRGB.
// Assuing using sRGB typed textures this should not be needed.
float ToSrgb1(float c){return(c<0.0031308?c*12.92:1.055*pow(c,0.41666)-0.055);}
vec3 ToSrgb(vec3 c){return vec3(ToSrgb1(c.r),ToSrgb1(c.g),ToSrgb1(c.b));}

// Nearest emulated sample given floating point position and texel offset.
// Also zero's off screen.
vec3 Fetch(vec2 pos,vec2 off){
  vec3 result;
  pos = (floor( pos*iResolution + off) + vec2(0.5,0.5))/iResolution;
#if __VERSION__ >= 140
  result = ToLinear(1.2 * texture(iChannel0 , pos.xy, -16.0).rgb);
#else
  result = ToLinear(1.2 * texture2D(iChannel0 , pos.xy, -16.0).rgb);
#endif
  return result;
}

// Distance in emulated pixels to nearest texel.
vec2 Dist(vec2 pos){pos=pos*iResolution;return -((pos-floor(pos))-vec2(0.5));}
    
// 1D Gaussian.
float Gaus(float pos,float scale){return exp2(scale*pos*pos);}

// 3-tap Gaussian filter along horz line.
vec3 Horz3(vec2 pos,float off){
  vec3 b=Fetch(pos,vec2(-1.0,off));
  vec3 c=Fetch(pos,vec2( 0.0,off));
  vec3 d=Fetch(pos,vec2( 1.0,off));
  float dst=Dist(pos).x;
  // Convert distance to weight.
  float scale=hardPix;
  float wb=Gaus(dst-1.0,scale);
  float wc=Gaus(dst+0.0,scale);
  float wd=Gaus(dst+1.0,scale);
  // Return filtered sample.
  return (b*wb+c*wc+d*wd)/(wb+wc+wd);
}

// 5-tap Gaussian filter along horz line.
vec3 Horz5(vec2 pos,float off){
  vec3 a=Fetch(pos,vec2(-2.0,off));
  vec3 b=Fetch(pos,vec2(-1.0,off));
  vec3 c=Fetch(pos,vec2( 0.0,off));
  vec3 d=Fetch(pos,vec2( 1.0,off));
  vec3 e=Fetch(pos,vec2( 2.0,off));
  float dst=Dist(pos).x;
  // Convert distance to weight.
  float scale=hardPix;
  float wa=Gaus(dst-2.0,scale);
  float wb=Gaus(dst-1.0,scale);
  float wc=Gaus(dst+0.0,scale);
  float wd=Gaus(dst+1.0,scale);
  float we=Gaus(dst+2.0,scale);
  // Return filtered sample.
  return (a*wa+b*wb+c*wc+d*wd+e*we)/(wa+wb+wc+wd+we);
}

// Return scanline weight.
float Scan(vec2 pos,float off){
  float dst=Dist(pos).y;
  return Gaus(dst+off,hardScan);
}

// Allow nearest three lines to effect pixel.
vec3 Tri(vec2 pos){
  vec3 a=Horz3(pos,-1.0);
  vec3 b=Horz5(pos, 0.0);
  vec3 c=Horz3(pos, 1.0);
  float wa=Scan(pos,-1.0);
  float wb=Scan(pos, 0.0);
  float wc=Scan(pos, 1.0);
  return a*wa + b*wb + c*wc;
}

// Distortion of scanlines, and end of screen alpha.
vec2 Warp(vec2 pos){
  pos = pos*2.0-1.0;    
  pos *= vec2(1.0+(pos.y*pos.y)*warp.x,1.0+(pos.x*pos.x)*warp.y);
  return pos*0.5+0.5;
}

// Shadow mask.
vec3 Mask(vec2 pos) {
  pos.x+=pos.y*3.0;
  vec3 mask=vec3(maskDark,maskDark,maskDark);
  pos.x=fract(pos.x/6.0);
  if(pos.x<0.333)mask.r=maskLight;
  else if(pos.x<0.666)mask.g=maskLight;
  else mask.b=maskLight;
  return mask;
}

void main(){
    vec2 pos = gl_FragCoord.xy/iResolution;
    pos = Warp(gl_FragCoord.xy/iResolution);
    vec4 result;
    result.rgb = Tri(pos) * Mask(gl_FragCoord.xy);
    result.a = 1.0;
    result = vertColor * vec4(ToSrgb(result.rgb), result.a);

	float gray = dot(result.rgb, vec3(0.299, 0.587, 0.114));

	vec3 sepiaColor = vec3(gray) * sepiaRgb;
	result.rgb = mix(result.rgb, sepiaColor, 0.75);
	result = result * vertColor;
#if __VERSION__ >= 140
	fragColor = result;
#else
	gl_FragColor = result;
#endif
}

Shader compile log:
15
Loading image: data/Camiseta.png
Texture: 'data/Camiseta.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/Entrelazado.png
Texture: 'data/Entrelazado.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/Entrelazado2.png
Texture: 'data/Entrelazado2.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/fantydcha1.png
Texture: 'data/fantydcha1.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/fantydcha2.png
Texture: 'data/fantydcha2.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/fantydcha3.png
Texture: 'data/fantydcha3.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/fantydcha4.png
Texture: 'data/fantydcha4.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/fantydcha5.png
Texture: 'data/fantydcha5.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/fantydcha6.png
Texture: 'data/fantydcha6.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/fantydcha7.png
Texture: 'data/fantydcha7.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/fantydcha8.png
Texture: 'data/fantydcha8.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/fin-bad.png
Texture: 'data/fin-bad.png'
Texture info:
-------------
Size: (256, 192) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/fin-end.png
Texture: 'data/fin-end.png'
Texture info:
-------------
Size: (256, 192) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/fin-good.png
Texture: 'data/fin-good.png'
Texture info:
-------------
Size: (256, 192) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/Flecha.png
Texture: 'data/Flecha.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/FlechaDer.png
Texture: 'data/FlechaDer.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/FlechaIzq.png
Texture: 'data/FlechaIzq.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/font.png
Loading image: data/franky1.png
Texture: 'data/franky1.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/franky10.png
Texture: 'data/franky10.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/franky2.png
Texture: 'data/franky2.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/franky3.png
Texture: 'data/franky3.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/franky4.png
Texture: 'data/franky4.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/franky5.png
Texture: 'data/franky5.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/franky6.png
Texture: 'data/franky6.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/franky7.png
Texture: 'data/franky7.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/franky8.png
Texture: 'data/franky8.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/franky9.png
Texture: 'data/franky9.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/game-over.png
Texture: 'data/game-over.png'
Texture info:
-------------
Size: (256, 192) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/glew-logo.png
Texture: 'data/glew-logo.png'
Texture info:
-------------
Size: (49, 38) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/glm-logo.png
Texture: 'data/glm-logo.png'
Texture info:
-------------
Size: (90, 54) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/Halo.png
Texture: 'data/Halo.png'
Texture info:
-------------
Size: (32, 32) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/logoMojon.png
Texture: 'data/logoMojon.png'
Texture info:
-------------
Size: (91, 19) ; depth: 1
Internal format: GL_RGB (6407)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 0
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/Moneda.png
Texture: 'data/Moneda.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/Moneda0.png
Texture: 'data/Moneda0.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/Moneda1.png
Texture: 'data/Moneda1.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/Moneda2.png
Texture: 'data/Moneda2.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/Moneda3.png
Texture: 'data/Moneda3.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/Moneda4.png
Texture: 'data/Moneda4.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/Opengl-logo.svg.png
Texture: 'data/Opengl-logo.svg.png'
Texture info:
-------------
Size: (90, 39) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/pixBlanco.png
Texture: 'data/pixBlanco.png'
Texture info:
-------------
Size: (1, 1) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/Placa.png
Texture: 'data/Placa.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/Puerta.png
Texture: 'data/Puerta.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/SDL_logo.png
Texture: 'data/SDL_logo.png'
Texture info:
-------------
Size: (90, 50) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/set-piramide.png
Texture: 'data/set-piramide.png'
Texture info:
-------------
Size: (16, 8) ; depth: 1
Internal format: GL_RGB (6407)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 0
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/texturaUWOL.png
Texture: 'data/texturaUWOL.png'
Texture info:
-------------
Size: (256, 128) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/TileFondo0.png
Texture: 'data/TileFondo0.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/TileFondo1.png
Texture: 'data/TileFondo1.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/TileFondo2.png
Texture: 'data/TileFondo2.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/TileFondo3.png
Texture: 'data/TileFondo3.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/TilePlat0.png
Texture: 'data/TilePlat0.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/TilePlat1.png
Texture: 'data/TilePlat1.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/TilePlat2.png
Texture: 'data/TilePlat2.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/TilePlat3.png
Texture: 'data/TilePlat3.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/TilePlat4.png
Texture: 'data/TilePlat4.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/TilePlat5.png
Texture: 'data/TilePlat5.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/TilePlat6.png
Texture: 'data/TilePlat6.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/TilePlat7.png
Texture: 'data/TilePlat7.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/TileSombra.png
Texture: 'data/TileSombra.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/tvSim1.png
Texture: 'data/tvSim1.png'
Texture info:
-------------
Size: (32, 2) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/tvSim2.png
Texture: 'data/tvSim2.png'
Texture info:
-------------
Size: (32, 2) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/tvSim3.png
Texture: 'data/tvSim3.png'
Texture info:
-------------
Size: (32, 2) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/uwol_portada.png
Texture: 'data/uwol_portada.png'
Texture info:
-------------
Size: (132, 177) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/UWOL0.png
Texture: 'data/UWOL0.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/UWOL1.png
Texture: 'data/UWOL1.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/UWOL2.png
Texture: 'data/UWOL2.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/UWOLdie.png
Texture: 'data/UWOLdie.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/UWOLIcon.png
Texture: 'data/UWOLIcon.png'
Texture info:
-------------
Size: (32, 32) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/UWOLp0.png
Texture: 'data/UWOLp0.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/UWOLp1.png
Texture: 'data/UWOLp1.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/UWOLp2.png
Texture: 'data/UWOLp2.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/Vampy0.png
Texture: 'data/Vampy0.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/Vampy1.png
Texture: 'data/Vampy1.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/VidaExtra.png
Texture: 'data/VidaExtra.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/warp.png
Texture: 'data/warp.png'
Texture info:
-------------
Size: (128, 124) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/warpCycle.png
Texture: 'data/warpCycle.png'
Texture info:
-------------
Size: (16, 1) ; depth: 1
Internal format: GL_RGB (6407)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 0
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/Wolfy0.png
Texture: 'data/Wolfy0.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading image: data/Wolfy1.png
Texture: 'data/Wolfy1.png'
Texture info:
-------------
Size: (16, 16) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
Loading song music/Death.ogg
MusicManager: Loading sound 'music/Death.ogg'...loaded!
Loading song music/EndKO.ogg
MusicManager: Loading sound 'music/EndKO.ogg'...loaded!
Loading song music/EndOK.ogg
MusicManager: Loading sound 'music/EndOK.ogg'...loaded!
Loading song music/GameOver.ogg
MusicManager: Loading sound 'music/GameOver.ogg'...loaded!
Loading song music/Ghosts3.ogg
MusicManager: Loading sound 'music/Ghosts3.ogg'...loaded!
Loading song music/Money.ogg
MusicManager: Loading sound 'music/Money.ogg'...loaded!
Loading song music/Piramide.ogg
MusicManager: Loading sound 'music/Piramide.ogg'...loaded!
Loading song music/Zona1.ogg
MusicManager: Loading sound 'music/Zona1.ogg'...loaded!
Loading song music/Zona2.ogg
MusicManager: Loading sound 'music/Zona2.ogg'...loaded!
Loading song music/Zona3.ogg
MusicManager: Loading sound 'music/Zona3.ogg'...loaded!
Loading song music/Zona4.ogg
MusicManager: Loading sound 'music/Zona4.ogg'...loaded!
Loading effect sounds/Bells.ogg
MusicManager: Loading sound 'sounds/Bells.ogg'...loaded!
Loading effect sounds/boing.ogg
MusicManager: Loading sound 'sounds/boing.ogg'...loaded!
Loading effect sounds/camiseta.ogg
MusicManager: Loading sound 'sounds/camiseta.ogg'...loaded!
Loading effect sounds/coinPicked.ogg
MusicManager: Loading sound 'sounds/coinPicked.ogg'...loaded!
Loading effect sounds/DeathCry.ogg
MusicManager: Loading sound 'sounds/DeathCry.ogg'...loaded!
Loading effect sounds/extra.ogg
MusicManager: Loading sound 'sounds/extra.ogg'...loaded!
Loading effect sounds/Hu.ogg
MusicManager: Loading sound 'sounds/Hu.ogg'...loaded!
Loading effect sounds/Next_stage.ogg
MusicManager: Loading sound 'sounds/Next_stage.ogg'...loaded!
Done!
Game: Loading animations...
Game: Preparing Stage...
MusicManager: Loading sound 'sounds/boing.ogg'...IN CACHE!
MusicManager: Loading sound 'sounds/DeathCry.ogg'...IN CACHE!
MusicManager: Loading sound 'sounds/extra.ogg'...IN CACHE!
MusicManager: Loading sound 'music/Death.ogg'...IN CACHE!
MusicManager: Loading sound 'sounds/Next_stage.ogg'...IN CACHE!
Texture: 'data/FlechaPeque.png'
Texture info:
-------------
Size: (8, 8) ; depth: 1
Internal format: GL_RGBA (6408)
Red size: 8
Green size: 8
Blue size: 8
Alpha size: 8
Depth size: 0
Compressed: 0
Compressed image size: 0
Buffer offset: 0
-------------
MusicManager: Loading sound 'sounds/Bells.ogg'...IN CACHE!
MusicManager: Loading sound 'music/Ghosts3.ogg'...IN CACHE!
MusicManager: Loading sound 'sounds/Hu.ogg'...IN CACHE!
MusicManager: Loading sound 'sounds/coinPicked.ogg'...IN CACHE!
MusicManager: Loading sound 'sounds/camiseta.ogg'...IN CACHE!
MusicManager: Loading sound 'music/Zona1.ogg'...IN CACHE!
MusicManager: Loading sound 'music/Zona2.ogg'...IN CACHE!
MusicManager: Loading sound 'music/Zona3.ogg'...IN CACHE!
MusicManager: Loading sound 'music/Zona4.ogg'...IN CACHE!
Loading room...
Creating Fanty...
   - Background:  
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 2
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background:  
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 0
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background:  
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 2
Adding Enemy: 1
Adding Enemy: 2
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background:  
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 1
Adding Enemy: 0
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background:  
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 1
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background:  
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 2
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background:  
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 2
Adding Enemy: 0
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background:  
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 2
Adding Enemy: 0
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background:  
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 2
Adding Enemy: 2
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background:  
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 2
Adding Enemy: 0
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 0
Adding Enemy: 0
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 2
Adding Enemy: 0
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 0
Adding Enemy: 1
Adding Enemy: 2
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 2
Adding Enemy: 0
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 2
Adding Enemy: 2
Adding Enemy: 2
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 1
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 1
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 2
Adding Enemy: 0
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 1
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 0
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 0
Adding Enemy: 2
Adding Enemy: 1
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 0
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 0
Adding Enemy: 2
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 0
Adding Enemy: 2
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 2
Adding Enemy: 0
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 2
Adding Enemy: 1
Adding Enemy: 0
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 0
Adding Enemy: 2
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 2
Adding Enemy: 2
Adding Enemy: 2
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 0
Adding Enemy: 2
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 1
Adding Enemy: 2
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 2
Adding Enemy: 0
Adding Enemy: 0
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 0
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 0
Adding Enemy: 2
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 2
Adding Enemy: 1
Adding Enemy: 2
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 1
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 2
Adding Enemy: 2
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 0
Adding Enemy: 1
Adding Enemy: 2
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 0
Adding Enemy: 0
Adding Enemy: 0
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 0
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 2
Adding Enemy: 0
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 0
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 0
Adding Enemy: 2
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 0
Adding Enemy: 2
Adding Enemy: 0
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 1
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 0
Adding Enemy: 2
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 2
Adding Enemy: 0
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 1
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 2
Adding Enemy: 0
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 2
Adding Enemy: 0
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 2
Adding Enemy: 0
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 1
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 0
Adding Enemy: 1
Adding Enemy: 2
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Loading room...
Creating Fanty...
   - Background: 
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding platform...
Adding Enemy: 1
Adding Enemy: 1
Adding Enemy: 1
Adding coin...
Adding coin...
Adding coin...
Adding coin...
Adding coin...
ShaderMgr: Loading shader 'data/shaders/Default.150.vertex'...
IN CACHE!
ShaderMgr: Loading shader 'data/shaders/CRT-Jasper.fragment'...
IN CACHE!
MusicManager: Loading sound 'sounds/coinPicked.ogg'...IN CACHE!
ShaderMgr: Loading shader 'data/shaders/Default.150.vertex'...
IN CACHE!
ShaderMgr: Loading shader 'data/shaders/ColorCycle.150.fragment'...
#version 430
#if __VERSION__ >= 140
// Interpolated values from the vertex shaders
in vec2 UV;
in vec4 vertColor;
// Ouput data
out vec4 fragColor;
#else
// Interpolated values from the vertex shaders
varying vec2 UV;
varying vec4 vertColor;
#endif

// Values that stay constant for the whole mesh.
uniform sampler2D iChannel0;
uniform sampler2D iChannel1;
uniform float iGlobalTime;

void main(){
#if __VERSION__ >= 140
	// Output color = color of the texture at the specified UV
	vec4 originalColor = texture( iChannel0, mod(UV, vec2(1.0,1.0)) );
#else
	// Output color = color of the texture at the specified UV
	vec4 originalColor = texture2D( iChannel0, mod(UV, vec2(1.0,1.0)) );
#endif
	vec2 index = vec2(mod(originalColor.r + (iGlobalTime/500.0), 12.0/16.0), 0.0);
#if __VERSION__ >= 140
	vec4 result = vertColor * texture( iChannel1, index );
#else
	vec4 result = vertColor * texture2D( iChannel1, index );
#endif
	result.a = originalColor.a * vertColor.a;
#if __VERSION__ >= 140
    fragColor = result;
#else
    gl_FragColor = result;
#endif
}

Shader compile log:
18
MusicManager: Loading sound 'music/Money.ogg'...IN CACHE!
MusicManager: Loading sound 'music/Ghosts3.ogg'...IN CACHE!
MusicManager: Loading sound 'music/Piramide.ogg'...IN CACHE!
MusicManager: Loading sound 'music/EndOK.ogg'...IN CACHE!
MusicManager: Loading sound 'music/EndKO.ogg'...IN CACHE!
MusicManager: Loading sound 'music/GameOver.ogg'...IN CACHE!
SetSaveAttract(false)
main: Starting main loop...
Current Room: 0 of 55.
Current Room: 1 of 55.
main: Main loop finished.
Checking errors:
No free channels available
No free channels availableMusicMgr: Deleting sounds.
MusicMgr: Deleting sound 'music/Death.ogg'.
MusicMgr: Deleting sound 'music/EndKO.ogg'.
MusicMgr: Deleting sound 'music/EndOK.ogg'.
MusicMgr: Deleting sound 'music/GameOver.ogg'.
MusicMgr: Deleting sound 'music/Ghosts3.ogg'.
MusicMgr: Deleting sound 'music/Money.ogg'.
MusicMgr: Deleting sound 'music/Piramide.ogg'.
MusicMgr: Deleting sound 'music/Zona1.ogg'.
MusicMgr: Deleting sound 'music/Zona2.ogg'.
MusicMgr: Deleting sound 'music/Zona3.ogg'.
MusicMgr: Deleting sound 'music/Zona4.ogg'.
MusicMgr: Deleting sound 'sounds/Bells.ogg'.
MusicMgr: Deleting sound 'sounds/DeathCry.ogg'.
MusicMgr: Deleting sound 'sounds/Hu.ogg'.
MusicMgr: Deleting sound 'sounds/Next_stage.ogg'.
MusicMgr: Deleting sound 'sounds/boing.ogg'.
MusicMgr: Deleting sound 'sounds/camiseta.ogg'.
MusicMgr: Deleting sound 'sounds/coinPicked.ogg'.
MusicMgr: Deleting sound 'sounds/extra.ogg'.
