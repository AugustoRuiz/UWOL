#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0)in vec3 vertexPosition;
layout(location = 1)in vec2 vertexUV;
layout(location = 2)in vec4 vertexColor;

// Output data ; will be interpolated for each fragment.
out vec2 UV;
out vec4 vertColor;

uniform mat4 MVP;

void main(){	
	// UV of the vertex. No special space for this one.
	UV = vertexUV;
	
	// Output position of the vertex, in clip space : MVP * position
	gl_Position = MVP * vec4(vertexPosition, 1);

	// Vertex color.
	vertColor = vertexColor;
}